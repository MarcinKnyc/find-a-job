version: '3.9'
services:
  job_search_postgres:
    image: postgres
    ports:
      - 15432:5432
    volumes:
      - ./postgres_database:/var/lib/postgresql/data
    environment:
      # FILL THESE IN WITH PRODUCTION USER/PASSWORD BEFORE CREATING DATABASE!
      - POSTGRES_PASSWORD=i_want_you_to_take_me_out_!(+)
      - POSTGRES_USER=job_search_admin
      - POSTGRES_DB=pracuj

  job_search_qdrant:
    # SETUP REQUIRES YOU TO CREATE A LOCAL.YAML config out of LOCAL.TEMPLATE.YAML config!!!
    image: qdrant/qdrant
    ports:
      - 6333:6333
    volumes:
      - ./database:/qdrant/storage:z
      # CONFIGS
      - ./job_search_qdrant/config/config.yaml:/qdrant/config/config.yaml
      - ./job_search_qdrant/config/local.yaml:/qdrant/config/local.yaml
      # Uncomment when they are modified:
      # - ./job_search_qdrant/config/development.yaml:/qdrant/config/development.yaml
      # - ./job_search_qdrant/config/production.yaml:/qdrant/config/production.yaml
      # in case of bad accuracy in search, consider m and ef_construct values in config.
      # in case of bad speed in upserts, consider turning off indexing while bulk upserting (see qdrant documentation)
      # changed: hnsw_index.on_disk: true; was false; service.grpc_port: null; was 6334; telemetry_disabled: true; was false; api_key.

  job_search_streamlit:
    build: .
    ports:
      - ${JOB_WEB_PORT}:${JOB_WEB_PORT}
    depends_on:
      - "job_search_qdrant"
      - "job_search_postgres"
    volumes:
      - ./pip_package_cache:/root/.cache/pip
      - ./huggingface_cache:/root/.cache/huggingface
      - ./pytorch_cache:/root/.cache/pytorch
      - ./torch_cache:/root/.cache/torch
    entrypoint: ["streamlit", "run", "job_search_streamlit/src/job_search_streamlit.py", "--server.port=${JOB_WEB_PORT}"]
    environment:
      - FIND_A_JOB_USER=${FIND_A_JOB_USER}
      - FIND_A_JOB_PASSWORD=${FIND_A_JOB_PASSWORD}
      - FIND_A_JOB_HOST=${FIND_A_JOB_HOST}
      - FIND_A_JOB_PORT=${FIND_A_JOB_PORT}
      - FIND_A_JOB_DBNAME=${FIND_A_JOB_DBNAME}
      - JOB_PORT=${JOB_PORT}
      - JOB_HOST=${JOB_HOST}
      - JOB_COLLECTION_NAME=${JOB_COLLECTION_NAME}
      - JOB_MODEL_VECTOR_SIZE=${JOB_MODEL_VECTOR_SIZE}
      - JOB_ON_DISK=${JOB_ON_DISK}
      - JOB_API_KEY=${JOB_API_KEY}
      - JOB_MODEL_NAME=${JOB_MODEL_NAME}
      - JOB_REST_PORT=${JOB_REST_PORT}
      - JOB_WEB_PORT=${JOB_WEB_PORT}

  job_search_flask:
    build: .
    ports:
      - ${JOB_REST_PORT}:${JOB_REST_PORT}
    depends_on:
      - "job_search_qdrant"
      - "job_search_postgres"
    volumes:
      - ./pip_package_cache:/root/.cache/pip
      - ./huggingface_cache:/root/.cache/huggingface
      - ./pytorch_cache:/root/.cache/pytorch
      - ./torch_cache:/root/.cache/torch
    entrypoint: ["python3", "-u", "job_search_flask/src/job_search_flask.py"]
    environment:
      - FIND_A_JOB_USER=${FIND_A_JOB_USER}
      - FIND_A_JOB_PASSWORD=${FIND_A_JOB_PASSWORD}
      - FIND_A_JOB_HOST=${FIND_A_JOB_HOST}
      - FIND_A_JOB_PORT=${FIND_A_JOB_PORT}
      - FIND_A_JOB_DBNAME=${FIND_A_JOB_DBNAME}
      - JOB_PORT=${JOB_PORT}
      - JOB_HOST=${JOB_HOST}
      - JOB_COLLECTION_NAME=${JOB_COLLECTION_NAME}
      - JOB_MODEL_VECTOR_SIZE=${JOB_MODEL_VECTOR_SIZE}
      - JOB_ON_DISK=${JOB_ON_DISK}
      - JOB_API_KEY=${JOB_API_KEY}
      - JOB_MODEL_NAME=${JOB_MODEL_NAME}
      - JOB_REST_PORT=${JOB_REST_PORT}
      - JOB_WEB_PORT=${JOB_WEB_PORT}

  job_search_link_scraper:
    build: 
      dockerfile: ./pracuj_scraper/Dockerfile
      context: .
    volumes:
      - ./logs/scraper:/app/logs
    depends_on:
      - "job_search_postgres"
    entrypoint: ["python3", "-u", "pracuj_scraper/scrape_links_all_pages_to_db.py"]
    environment:
      - FIND_A_JOB_USER=${FIND_A_JOB_USER}
      - FIND_A_JOB_PASSWORD=${FIND_A_JOB_PASSWORD}
      - FIND_A_JOB_HOST=${FIND_A_JOB_HOST}
      - FIND_A_JOB_PORT=${FIND_A_JOB_PORT}
      - FIND_A_JOB_DBNAME=${FIND_A_JOB_DBNAME}
  
  job_search_offer_scraper:
    build: 
      dockerfile: ./pracuj_scraper/Dockerfile
      context: .
    volumes:
      - ./logs/scraper:/app/logs
    depends_on:
      - "job_search_postgres"
    entrypoint: ["python3", "-u", "pracuj_scraper/scrape_offers_for_links_in_db.py"]
    environment:
      - FIND_A_JOB_USER=${FIND_A_JOB_USER}
      - FIND_A_JOB_PASSWORD=${FIND_A_JOB_PASSWORD}
      - FIND_A_JOB_HOST=${FIND_A_JOB_HOST}
      - FIND_A_JOB_PORT=${FIND_A_JOB_PORT}
      - FIND_A_JOB_DBNAME=${FIND_A_JOB_DBNAME}

  job_search_offer_exporter:
    build: .
    depends_on:
      - "job_search_postgres"
      - "job_search_qdrant"
    entrypoint: ["python3", "-u", "job_offer_exporter/exporter/export_all_to_qdrant.py"]
    volumes:
      - ./logs/exporter:/app/logs
      - ./pip_package_cache:/root/.cache/pip
      - ./huggingface_cache:/root/.cache/huggingface
      - ./pytorch_cache:/root/.cache/pytorch
      - ./torch_cache:/root/.cache/torch
      - ./job_offer_exporter/exporter/export_all_to_qdrant.py:/app/job_offer_exporter/exporter/export_all_to_qdrant.py
      - ./job_search_qdrant/repositories_qdrant/get_client.py:/app/job_search_qdrant/repositories_qdrant/get_client.py
      - ./job_search_qdrant/repositories_qdrant/job_offers_pracuj_repository.py:/app/job_search_qdrant/repositories_qdrant/job_offers_pracuj_repository.py
    environment:
      - FIND_A_JOB_USER=${FIND_A_JOB_USER}
      - FIND_A_JOB_PASSWORD=${FIND_A_JOB_PASSWORD}
      - FIND_A_JOB_HOST=${FIND_A_JOB_HOST}
      - FIND_A_JOB_PORT=${FIND_A_JOB_PORT}
      - FIND_A_JOB_DBNAME=${FIND_A_JOB_DBNAME}
      - JOB_PORT=${JOB_PORT}
      - JOB_HOST=${JOB_HOST}
      - JOB_COLLECTION_NAME=${JOB_COLLECTION_NAME}
      - JOB_MODEL_VECTOR_SIZE=${JOB_MODEL_VECTOR_SIZE}
      - JOB_ON_DISK=${JOB_ON_DISK}
      - JOB_API_KEY=${JOB_API_KEY}
      - JOB_MODEL_NAME=${JOB_MODEL_NAME}
      
  

  

